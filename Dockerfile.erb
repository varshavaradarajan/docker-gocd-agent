# Copyright 2017 ThoughtWorks, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

###############################################################################################
# This file is autogenerated by the repository at https://github.com/gocd/docker-gocd-agent.
# Please file any issues or PRs at https://github.com/gocd/docker-gocd-agent
###############################################################################################

FROM <%= distro %>:<%= version %>
MAINTAINER GoCD <go-cd-dev@googlegroups.com>

LABEL gocd.version="<%= gocd_version %>" \
  description="GoCD agent based on <%= distro %> version <%= version %>" \
  maintainer="GoCD <go-cd-dev@googlegroups.com>" \
  gocd.full.version="<%= gocd_full_version %>" \
  gocd.git.sha="<%= gocd_git_sha %>"

<% add_files.each do |file, meta| -%>
ADD <%= meta[:url] %> <%= file %>
<% end %>

# force encoding
ENV LANG=en_US.utf8

ARG UID=1000
ARG GID=1000

RUN \
<% unless add_files.empty? -%>
# add mode and permissions for files we added above
  <%= add_files.collect {|file, meta| ["chmod #{meta[:mode]} #{file}", "chown #{meta[:owner]}:#{meta[:group]} #{file}"]}.flatten.join(" && \\\n  ") %> && \
<% end -%>
# add our user and group first to make sure their IDs get assigned consistently,
# regardless of whatever dependencies get added
  <%= create_user_and_group.join(" && \\ \n  ") -%> && \
  <%= before_install.join(" && \\\n  ") -%> && \
# download the zip file
  curl --fail --location --silent --show-error "<%= download_url %>" > /tmp/go-agent.zip && \
# unzip the zip file into /go-agent, after stripping the first path prefix
  unzip /tmp/go-agent.zip -d / && \
  mv go-agent-<%= gocd_version %> /go-agent && \
  rm /tmp/go-agent.zip

# ensure that logs are printed to console output
<% %w(agent-bootstrapper-logback-include.xml agent-launcher-logback-include.xml agent-logback-include.xml).each do |log_config_file| -%>
COPY <%= log_config_file %> /go-agent/config/<%= log_config_file %>
<% end -%>

ADD docker-entrypoint.sh /

HEALTHCHECK --start-period=60s --retries=5 CMD curl 'http://localhost:8152/health/v1/isConnectedToServer'

ENTRYPOINT ["/docker-entrypoint.sh"]
